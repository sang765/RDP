name: RDP

on:
  workflow_dispatch:
  schedule:
    - cron: '50 */5 * * *'

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force

          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Create or Reuse RDP User
        run: |
          # Sử dụng password cố định từ secret
          $password = '${{ secrets.RDP_PASSWORD }}'
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          
          # Kiểm tra nếu user đã tồn tại
          $user = Get-LocalUser -Name "RDP" -ErrorAction SilentlyContinue
          if ($user) {
              Set-LocalUser -Name "RDP" -Password $securePass
              Write-Host "Updated password for existing user RDP"
          } else {
              New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
              Add-LocalGroupMember -Group "Administrators" -Member "RDP"
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
              Write-Host "Created new user RDP"
          }
          
          echo "RDP_CREDS=User: RDP | Password: $password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "$installerPath", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Persistent Tailscale Connection
        run: |
          # Sử dụng hostname cố định và reset để đảm bảo cấu hình đúng
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=github-rdp-runner --reset
          
          # Lấy IP và lưu vào file để sử dụng sau này
          $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          echo "TAILSCALE_HOSTNAME=github-rdp-runner" >> $env:GITHUB_ENV
          
          # Lưu thông tin kết nối vào file trong repository
          Set-Content -Path ".\rdp-connection.txt" -Value "Hostname: github-rdp-runner`nIP: $tsIP`nUser: RDP`nPassword: ${{ secrets.RDP_PASSWORD }}"

      - name: Commit connection info
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add rdp-connection.txt
          git commit -m "Update RDP connection info" || echo "No changes to commit"
          git push

      - name: Verify RDP Accessibility
        run: |
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "TCP connection to RDP port 3389 failed"
              exit 1
          }
          Write-Host "RDP connection verified successfully!"

      - name: Maintain Connection
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_HOSTNAME ($env:TAILSCALE_IP)"
          Write-Host "Username: RDP"
          Write-Host "Password: ${{ secrets.RDP_PASSWORD }}"
          Write-Host "==================`n"
          Write-Host "This information is also saved in rdp-connection.txt in the repository"
          
          # Giữ kết nối hoạt động
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
              Start-Sleep -Seconds 300
          }
